source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
View(data_interval)
View(calcium_baseline)
View(data)
View(data_interval)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red") +
stat_regline_equation() +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(plot)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red") +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(plot)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red") +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(plot)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red") +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(plot)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red") +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(plot)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red") +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(plot)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red") +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(plot)
# Read the data
data <- read_xlsx("E:/Academia/Work/Early Stage Researcher/events-Jerone Van1.xlsx")
data$Time <- as.numeric(data$Time)
data <- data %>%
mutate(TimeBin = floor(Time)) %>%
group_by(TimeBin)
data2 <- data %>%
summarise(across(where(is.numeric), median, na.rm = TRUE))
# Filter the data for the desired time interval
start_time <- 200
end_time <- 300
data_interval <- data2 %>%
filter(TimeBin >= start_time & TimeBin <= end_time)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red") +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(plot)
print(calcium_baseline)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red") +
stat_regline_equation() +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(calcium_baseline)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red") +
stat_regline_equation(data = data_interval) +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(calcium_baseline)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red") +
stat_regline_equation(data = data_interval, label =  paste(..eq.label.., ..adj.rr.label.., sep = "~~~~")) +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
summarize(lm(FL1 ~ TimeBin, data = data_interval))
summarise(lm(FL1 ~ TimeBin, data = data_interval))
print(lm(FL1 ~ TimeBin, data = data_interval))
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red", formula = y ~ x) +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(calcium_baseline)
print(lm(FL1 ~ TimeBin, data = data_interval))
print(lm(FL1 ~ Time, data = data_interval))
lin_eq <- lm(FL1 ~ TimeBin, data = data_interval)
summary(lin_eq)
lin_eq <- lm(FL1 ~ TimeBin, data = data_interval)
R_squared <- summary(lin_eq)$r.squared
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red", formula = y ~ x) +
annotate(lin_eq, R_squared)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red", formula = y ~ x) +
annotate("text", lin_eq, R_squared)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red", formula = y ~ x) +
annotate("text", str(lin_eq), str(R_squared)) +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red", formula = y ~ x) +
annotate("text", label = lin_eq + R_squared) +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red", formula = y ~ x) +
annotate("text", label = lin_eq + R_squared) +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(paste("Slope of the regression line:", lin_eq))
print(paste("Slope of the regression line:", coef(lin_eq)[2]))
print(paste("Slope of the regression line:", coef(lin_eq)[2], "x", coef(lin_eq)[1]))
print(paste("Slope of the regression line:", coef(lin_eq)[2], "* x", "+", coef(lin_eq)[1]))
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red", formula = y ~ x) +
annotate("text", label = paste("Slope of the regression line:", coef(lin_eq)[2], "* x", "+", coef(lin_eq)[1])) +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(calcium_baseline)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red", formula = y ~ x) +
annotate("text", x = (start_time + end_time) / 2, y = max(data$FL1), label = paste("Slope of the regression line:", coef(lin_eq)[2], "* x", "+", coef(lin_eq)[1])) +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(calcium_baseline)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red", formula = y ~ x) +
annotate("text", x = (start_time + end_time) / 2, y = max(data_interval$FL1), label = paste("Slope of the regression line:", coef(lin_eq)[2], "* x", "+", coef(lin_eq)[1])) +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(calcium_baseline)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red", formula = y ~ x) +
annotate("text", x = (start_time + end_time) / 2, y = max(data_interval$FL1), label = paste(coef(lin_eq)[2], "* x", "+", coef(lin_eq)[1])) +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(calcium_baseline)
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red", formula = y ~ x) +
annotate("text", x = (start_time + end_time) / 2, y = max(data_interval$FL1), label = paste(round(coef(lin_eq)[2], 2), "* x", "+", round(coef(lin_eq)[1], 2))) +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(calcium_baseline)
lin_reg <- lm(FL1 ~ TimeBin, data = data_interval)
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
lin_reg <- lm(FL1 ~ TimeBin, data = data_interval)
lin_eq <- paste(round(coef(lin_reg)[2], 2), "* x", "+", round(coef(lin_reg)[1], 2))
R_squared <- summary(lin_eq)$r.squared
calcium_baseline <- ggplot(data2, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = data_interval, method = "lm", se = FALSE, color = "red", formula = y ~ x) +
annotate("text", x = (start_time + end_time) / 2, y = max(data_interval$FL1), label = lin_eq) +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
print(calcium_baseline)
R_squared <- summary(lin_reg)$r.squared
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
ggsave("FC_data.tiff", path = "C:/Users/miri/Documents/GitHub/R-graphs/Graphs and figures", units = "in", dpi=300, compression = 'lzw', width = 5, height = 5)
setwd("~/GitHub/R-graphs/Flow cytometry analysis")
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
setwd("~/GitHub/R-graphs/Flow cytometry analysis")
setwd("~/GitHub/R-graphs/Flow cytometry analysis")
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
setwd("~/GitHub/R-graphs/Flow cytometry analysis")
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
write.xlsx(binned_baseline, "~/binned-Jerone Van1.xlsx")
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
calcium_baseline <- ggplot(binned_baseline, aes(TimeBin, FL1)) +
geom_line() +
geom_smooth(data = baseline_region, method = "lm", se = FALSE, color = "red", formula = y ~ x) +
annotate("text", x = (start_time + end_time) / 2, y = max(baseline_region$FL1), label = lin_eq) +
labs(title = "Calcium kinetics with regression line",
x = "Time [seconds]",
y = "FL1 [RFU]")
ggsave("FC_data.tiff", path = "~/GitHub/R-graphs/Flow cytometry analysis/graphs", units = "in", dpi=300, compression = 'lzw', width = 7, height = 5)
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
View(binned_baseline)
View(baseline_data)
source("C:/Users/miri/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/Data analysis.R")
setwd("C:/Users/miri/Documents/GitHub/R-graphs/Flow cytometry analysis")
install.packages("rmarkdown")
install.packages("knitr")
install.packages("rmarkdown")
install.packages("knitr")
library(dplyr)
library(readxl)
library(openxlsx)
library(ggplot2)
library(ggthemes)
library(ggpubr)
# Read in the file that contains the baseline data
baseline_data <- read_xlsx("C:/Users/paubus/OneDrive - Universität Zürich UZH/Documents/GitHub/R-graphs/Flow cytometry analysis/events-Jerone Van1.xlsx")
library(dplyr)
library(readxl)
library(openxlsx)
library(ggplot2)
library(ggthemes)
library(ggpubr)
# Read in the file that contains the baseline data
baseline_data <- read_xlsx("C:/Users/miri/Documents/GitHub/R-graphs/Flow cytometry analysis/events-Jerone Van1.xlsx")
PMCA_data <- read_xlsx("C:/Users/miri/Documents/GitHub/R-graphs/Flow cytometry analysis/events-Jerone Van1.1.xlsx")
# Baseline data -----------------------------------------------------------
# Bin data (1 second intervals - median)
baseline_data <- baseline_data %>%
mutate(TimeBin = floor(Time)) %>%
group_by(TimeBin) %>%
summarise(across(where(is.numeric), median(x), na.rm = TRUE))
View(baseline_data)
library(dplyr)
library(readxl)
library(openxlsx)
library(ggplot2)
library(ggthemes)
library(ggpubr)
# Read in the file that contains the baseline data
baseline_data <- read_xlsx("C:/Users/miri/Documents/GitHub/R-graphs/Flow cytometry analysis/events-Jerone Van1.xlsx")
PMCA_data <- read_xlsx("C:/Users/miri/Documents/GitHub/R-graphs/Flow cytometry analysis/events-Jerone Van1.1.xlsx")
# Baseline data -----------------------------------------------------------
# Bin data (1 second intervals - median)
baseline_data <- baseline_data %>%
mutate(TimeBin = floor(Time)) %>%
group_by(TimeBin) %>%
summarise(across(where(is.numeric), median, na.rm = TRUE))
View(baseline_data)
View(baseline_data)
library(dplyr)
library(readxl)
library(openxlsx)
library(ggplot2)
library(ggthemes)
library(ggpubr)
# Read in the file that contains the baseline data
baseline_data <- read_xlsx("C:/Users/miri/Documents/GitHub/R-graphs/Flow cytometry analysis/events-Jerone Van1.xlsx")
PMCA_data <- read_xlsx("C:/Users/miri/Documents/GitHub/R-graphs/Flow cytometry analysis/events-Jerone Van1.1.xlsx")
# Baseline data -----------------------------------------------------------
# Bin data (1 second intervals - median)
baseline_data <- baseline_data %>%
mutate(TimeBin = floor(Time)) %>%
group_by(TimeBin) %>%
summarise(across(where(is.numeric), ~median(.x, na.rm = TRUE)))
View(baseline_data)
lin_reg <- lm(FL1 ~ TimeBin,
data = baseline_region)
library(dplyr)
library(readxl)
library(openxlsx)
library(ggplot2)
library(ggthemes)
library(ggpubr)
baseline_data <- read_xlsx("C:/Users/miri/Documents/GitHub/R-graphs/Flow cytometry analysis/events-Jerone Van1.xlsx")
PMCA_data <- read_xlsx("C:/Users/miri/Documents/GitHub/R-graphs/Flow cytometry analysis/events-Jerone Van1.1.xlsx")
baseline_data <- baseline_data %>%
mutate(TimeBin = floor(Time)) %>%
group_by(TimeBin) %>%
summarise(across(where(is.numeric), ~median(.x, na.rm = TRUE)))
write.xlsx(baseline_data, "C:/Users/miri/Documents/GitHub/R-graphs/Flow cytometry analysis/binned-Jerone Van1.xlsx")
start_time <- 200
end_time <- 300
baseline_region <- baseline_data %>%
filter(TimeBin >= start_time & TimeBin <= end_time)
lin_reg <- lm(FL1 ~ TimeBin,
data = baseline_region)
lin_eq <- paste(
round(coef(lin_reg)[2], 2),
"* x",
"+",
round(coef(lin_reg)[1], 2)
)
print(paste("This is the equation of your linear regression line: " + lin_eq))
lin_reg <- lm(FL1 ~ TimeBin,
data = baseline_region)
lin_eq <- paste(
round(coef(lin_reg)[2], 2),
"* x",
"+",
round(coef(lin_reg)[1], 2)
)
print("This is the equation of your linear regression line: " + lin_eq)
lin_reg <- lm(FL1 ~ TimeBin,
data = baseline_region)
lin_eq <- paste(
round(coef(lin_reg)[2], 2),
"* x",
"+",
round(coef(lin_reg)[1], 2)
)
print("This is the equation of your linear regression line: ", + lin_eq)
lin_reg <- lm(FL1 ~ TimeBin,
data = baseline_region)
lin_eq <- paste(
round(coef(lin_reg)[2], 2),
"* x",
"+",
round(coef(lin_reg)[1], 2)
)
print("This is the equation of your linear regression line: ", lin_eq)
lin_reg <- lm(FL1 ~ TimeBin,
data = baseline_region)
lin_eq <- paste(
round(coef(lin_reg)[2], 2),
"* x",
"+",
round(coef(lin_reg)[1], 2)
)
print("This is the equation of your linear regression line: " lin_eq)
lin_reg <- lm(FL1 ~ TimeBin,
data = baseline_region)
lin_eq <- paste(
round(coef(lin_reg)[2], 2),
"* x",
"+",
round(coef(lin_reg)[1], 2)
)
print("This is the equation of your linear regression line: " + "lin_eq")
lin_reg <- lm(FL1 ~ TimeBin,
data = baseline_region)
lin_eq <- paste(
round(coef(lin_reg)[2], 2),
"* x",
"+",
round(coef(lin_reg)[1], 2)
)
print(paste("This is the equation of your linear regression line: ", lin_eq))
